# https://taskfile.dev

version: '3'

dotenv: ['.env']

vars:
  GREETING: Hello, Welcome to SDinc ( Specialty Diagnostics Incorporated )
  SDINC_TF_VERSION: "hashicorp/terraform:1.5.2"
  SDINC_TF_DOCKER_OPTIONS: "-t -v ${HOME}/.aws:/root/.aws -v ${HOME}/.azure:/root/.azure -v ${HOME}/.terraform.d:/root/.terraform.d -v $(pwd):$(pwd) -w $(pwd)"
  SDINC_RUST_DOCKER_OPTIONS: "-t -v ${HOME}/.aws:/root/.aws -v ${HOME}/.azure:/root/.azure -v ${HOME}/.terraform.d:/root/.terraform.d -v $(pwd):$(pwd) -w $(pwd)/rust"
  SDINC_AZ_VERSION: "mcr.microsoft.com/azure-cli:2.51.0-arm64"
  SDINC_AZ_LATEST: "mcr.microsoft.com/azure-cli:latest"
  SDINC_AZ_DOCKER_OPTIONS: "-i -t -v ${HOME}/.ssh:/root/.ssh -v ${HOME}/.azure:/root/.azure  -v $(pwd):$(pwd) -w $(pwd)"
  SDINC_AWS_VERSION: "public.ecr.aws/aws-cli/aws-cli:2.13.18"
  SDINC_AWS_LATEST: "public.ecr.aws/aws-cli/aws-cli:latest"
  SDINC_AWS_DOCKER_OPTIONS: "-i -t -v ${HOME}/.aws:/root/.aws -v $(pwd):$(pwd) -w $(pwd)"
  SDINC_LATEST: "sdinc:latest"
  SDINC_RUST_LATEST: "sdinc-rust:latest"
  SDINC_RUST_VERSION: "sdinc-rust:0.0.1"
  EPOCH:
    sh: date +%s
tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
      - task --list
      - date -u
    silent: true
  # due to containers running as root need to sudo to remove files TODO: fix this up later
  clean:
    desc: "remove generated files"
    cmds:
      - "sudo rm -rvf {{.ROOT_DIR}}/.terraform {{.ROOT_DIR}}/.external_modules {{.ROOT_DIR}}/rust/target"
  ci: #used by azure pipelines
    deps: [check-tools]
    cmds:
      - task --parallel checkov rust-build
      - task --parallel rust-format rust-lint rust-test
  tf-init:
    desc: "terraform init via docker backend terraform cloud"
    cmds:
      - 'docker run --entrypoint="/usr/local/bin/terraform" {{.SDINC_TF_DOCKER_OPTIONS}} {{.SDINC_LATEST}} init'
  tf-login:
    desc: "terraform login via docker backend terraform cloud"
    cmds:
      - 'docker run --entrypoint="/usr/local/bin/terraform" {{.SDINC_TF_DOCKER_OPTIONS}} {{.SDINC_LATEST}} login'
  tf-plan:
    desc: "terraform plan via docker backend terraform cloud"
    cmds:
      - 'docker run --entrypoint="/usr/local/bin/terraform" {{.SDINC_TF_DOCKER_OPTIONS}} {{.SDINC_LATEST}} plan'
  tf-apply:
    desc: "terraform apply via docker backend terraform cloud"
    cmds:
      - 'docker run --entrypoint="/usr/local/bin/terraform" {{.SDINC_TF_DOCKER_OPTIONS}} {{.SDINC_LATEST}} apply --auto-approve'
  aws-who:
    desc: "aws sts get-caller-identity"
    cmds:
      - "docker run {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_AWS_LATEST}} sts get-caller-identity"
  sdinc-build:
    desc: "build sdinc container with bash shell"
    cmds:
      - "docker build -t {{.SDINC_LATEST}} ."
  aws-cli:
    desc: "aws sts get-caller-identity"
    cmds:
      - 'docker run --entrypoint="/bin/bash" {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_LATEST}} '
  sfefoil-down:
    desc: "pull site from s3"
    cmds:
      - "docker run {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_AWS_VERSION}} s3 sync s3://sfefoil web/sfefoil/"
  sfefoil-up:
    desc: "push site from local to s3"
    cmds:
      - "docker run {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_AWS_VERSION}} s3 sync web/sfefoil/ s3://sfefoil "
      - "docker run {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_AWS_VERSION}} cloudfront create-invalidation --distribution-id E12ZXTN97X742W --paths /index.html"
  sd-down:
    desc: "pull site from s3"
    cmds:
      - "docker run {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_AWS_VERSION}} s3 sync s3://specialtydiagnostics web/specialtydiagnostics/"
  sd-up:
    desc: "push site from local to s3"
    cmds:
      - "docker run {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_AWS_VERSION}} s3 sync web/specialtydiagnostics/ s3://specialtydiagnostics "
      - "docker run {{.SDINC_AWS_DOCKER_OPTIONS}} {{.SDINC_AWS_VERSION}} cloudfront create-invalidation --distribution-id E394EPQZ3ZNKW0 --paths /index.html"
  checkov:
    desc: "run checkov via docker"
    cmds:
      - "docker run {{.SDINC_TF_DOCKER_OPTIONS}} bridgecrew/checkov --directory $(pwd) --skip-check CKV2_GHA_1  "
  az-login:
    desc: "auth to azure cli"
    cmds:
      - "docker run {{.SDINC_AZ_DOCKER_OPTIONS}} {{.SDINC_AZ_LATEST}} az login"
  az-sp:
    cmds:
      - docker run {{.SDINC_AZ_DOCKER_OPTIONS}} {{.SDINC_AZ_LATEST}} az account list --query "[?user.name=='brodytwo@gmail.com'].{Name:name, ID:id, Default:isDefault}" --output Table
      - "docker run {{.SDINC_AZ_DOCKER_OPTIONS}} {{.SDINC_AZ_LATEST}} az account show"
      #- "docker run {{.SDINC_AZ_DOCKER_OPTIONS}} {{.SDINC_AZ_LATEST}} az ad sp create-for-rbac --name tfbrody --role Contributor --scopes /subscriptions/<subscription_id>"
  az-shell:
    desc: "run azure shell"
    cmds:
      - "docker run {{.SDINC_AZ_DOCKER_OPTIONS}} {{.SDINC_AZ_LATEST}}"
  sdinc-shell:
    desc: "run sdinc container as bash shell"
    cmds:
      - 'docker run --entrypoint="/bin/bash" {{.SDINC_TF_DOCKER_OPTIONS}} {{.SDINC_LATEST}} '
  check-tools:
    cmds:
      - "which docker"
  rust-shell:
    desc: "launch a rust shell/environment, ie rustc and cargo are on the path"
    deps: [rust-build]
    cmds:
      - "docker run -i {{.SDINC_RUST_DOCKER_OPTIONS}} {{.SDINC_RUST_LATEST}}  "
  rust-format:
    desc: "format my code"
    dir: "{{.ROOT_DIR}}/rust"
    cmds:
      - "docker run {{.SDINC_RUST_DOCKER_OPTIONS}} {{.SDINC_RUST_LATEST}} cargo fmt --all"
  rust-build:
    desc: "build the rust container, rust application"
    dir: "{{.ROOT_DIR}}/rust"
    cmds:
      - "docker build -t {{.SDINC_RUST_LATEST}} -f Docker.builder ."
  rust-test:
    desc: "run the rust tests"
    dir: "{{.ROOT_DIR}}/rust"
    cmds:
      - "docker run {{.SDINC_RUST_DOCKER_OPTIONS}} {{.SDINC_RUST_LATEST}} cargo test"
  rust-lint:
    dir: "{{.ROOT_DIR}}/rust"
    cmds:
      - "docker run {{.SDINC_RUST_DOCKER_OPTIONS}} {{.SDINC_RUST_LATEST}} cargo clippy --quiet"
  rust-run:
    dir: "{{.ROOT_DIR}}/rust"
    cmds:
      - "docker run {{.SDINC_RUST_DOCKER_OPTIONS}} {{.SDINC_RUST_LATEST}} cargo run"
  rust-all:
    desc: "run the SDLC(Software Development Life Cycle)"
    deps: [clean, rust-build]
    cmds:
      - task --parallel rust-format rust-lint rust-test
